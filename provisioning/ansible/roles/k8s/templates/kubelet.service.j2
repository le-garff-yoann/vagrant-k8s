[Unit]
Description=Kubernetes Kubelet Server
Documentation=https://github.com/kubernetes/kubernetes
After=network.target etcd.service flanneld.service docker.service

[Service]
Restart=on-failure
RestartSec=5s
StartLimitInterval=0
KillMode=process
ExecStart=/usr/local/bin/kubelet \
  --cloud-provider='{{ k8s_config.k8s.service.cloudProvider }}' \
  --hairpin-mode=hairpin-veth \
  --address={{ k8s_config._virtual.inventory[ansible_hostname] }} \
  --anonymous-auth=false \
  --authentication-token-webhook=true \
  --cgroup-root= \
  --runtime-cgroups=/systemd/system.slice \
  --kubelet-cgroups=/systemd/system.slice \
  --cluster-dns={{ k8s_config.k8s.services.coredns.ip }} \
  --cluster-domain={{ k8s_config.k8s.domain }} \
  --eviction-hard='memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<10%,imagefs.inodesFree<5%' \
  --kubeconfig=/var/lib/kubelet/kubeconfig \
  --pod-manifest-path=/etc/kubernetes/manifests \
  --register-node=true \
  --container-runtime=docker \
  --docker=unix:///var/run/docker.sock \
  --tls-cert-file='{{ k8s_config.srvkube.guest }}/{{ ansible_hostname }}-worker.pem' \
  --tls-private-key-file='{{ k8s_config.srvkube.guest }}/{{ ansible_hostname }}-worker-key.pem' \
  --client-ca-file='{{ k8s_config.srvkube.guest }}/ca.pem' \
  --cni-bin-dir=/etc/kubernetes/cni/net.d \
  --network-plugin='' \
  --node-ip={{ k8s_config._virtual.inventory[ansible_hostname] }} \
  --fail-swap-on=false \
  --serialize-image-pulls=false \
  --node-labels=node.kubernetes.io/role=master \
  --log-dir=/var/log/kubernetes \
  --logtostderr=false \
  --v=2

[Install]
WantedBy=multi-user.target
