[Unit]
Description=Kubernetes Kubelet Server
Documentation=https://github.com/kubernetes/kubernetes
After=network.target docker.service

[Service]
Restart=on-failure
RestartSec=5s
StartLimitInterval=0
KillMode=process
ExecStart={{ (k8s_binaries_path + '/kubelet') | quote }} \
  --cloud-provider='' \
  --hairpin-mode=hairpin-veth \
  --anonymous-auth=false \
  --authentication-token-webhook=true \
  --cgroup-root= \
  --runtime-cgroups=/systemd/system.slice \
  --kubelet-cgroups=/systemd/system.slice \
  --register-node=true \
  --container-runtime=docker \
  --docker=unix:///var/run/docker.sock \
  --cni-bin-dir=/etc/kubernetes/cni/net.d \
  --network-plugin='' \
  --fail-swap-on=false \
  --serialize-image-pulls=false \
  --logtostderr=false \
  --v=2 \
  --address={{ hostvars[ansible_hostname].ip }} \
  --cluster-dns={{ k8s_cluster_dns | quote }} \
  --cluster-domain={{ k8s_domain }} \
  --eviction-hard='memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<10%,imagefs.inodesFree<5%' \
  --kubeconfig={{ k8s_kubelet_kubeconfig | quote }} \
  --pod-manifest-path={{ k8s_manifestsdir  | quote }} \
  --client-ca-file={{ k8s_kubelet_cacertfile_path | quote }} \
  --tls-cert-file={{ k8s_kubelet_certfile_path | quote }} \
  --tls-private-key-file={{ k8s_kubelet_keyfile_path | quote }} \
  --node-ip={{ hostvars[ansible_hostname].ip }} \
  --log-dir={{ k8s_logsdir | quote }}

[Install]
WantedBy=multi-user.target
