global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3 no-tls-tickets

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    timeout http-request 15s
    timeout http-keep-alive 15s

    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

{% if 'traefik' not in k8s_config._k8s.excluded_addons %}
frontend traefik-http-frontend
    bind 0.0.0.0:80
    mode tcp
    option tcplog
    tcp-request inspect-delay 5s
    default_backend traefik-lb
{% endif %}

frontend k8s-api
    bind 0.0.0.0:443
    mode tcp
    option tcplog
    tcp-request inspect-delay 5s
    tcp-request content accept if { req.ssl_hello_type 1 }
{% if 'traefik' not in k8s_config._k8s.excluded_addons %}
    use_backend traefik-tls-lb if { req.ssl_sni -m found } !{ req.ssl_sni -i k8s-api.{{ k8s_config.virtual.domain }} }
{% endif %}
    default_backend k8s-api

backend k8s-api
    mode tcp
    option tcplog
    option tcp-check
    balance roundrobin
    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
{% for k, v in k8s_config._virtual.inventory | dictsort %}
    server k8s-api-{{ loop.index }} {{ v }}:6443 check
{% endfor %}

{% if 'traefik' not in k8s_config._k8s.excluded_addons %}
backend traefik-lb
    mode tcp
    option tcplog
    option tcp-check
    balance roundrobin
    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
{% for k, v in k8s_config._virtual.inventory | dictsort %}
    server traefik-{{ loop.index }} {{ v }}:{{ k8s_config.k8s.services.traefik1.nodePort.http }} check
{% endfor %}

backend traefik-tls-lb
    mode tcp
    option tcplog
    option tcp-check
    balance roundrobin
    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
{% for k, v in k8s_config._virtual.inventory | dictsort %}
    server traefik-{{ loop.index }} {{ v }}:{{ k8s_config.k8s.services.traefik1.nodePort.https }} check
{% endfor %}
{% endif %}
