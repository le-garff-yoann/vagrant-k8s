---

- hosts: all

  tasks:
    - name: Generate and apply nfs k8s manifest
      block:
        - file:
            path: "{{ config.k8s.services.nfs.hostPath }}"
            state: directory
        - tempfile:
            state: file
          register: tempfile
          changed_when: false
        - copy:
            dest: "{{ tempfile.path }}"
            content: |
              ---
              kind: StorageClass
              apiVersion: storage.k8s.io/v1
              metadata:
                name: nfs-dynamic
                labels:
                  kubernetes.io/cluster-service: "true"
                annotations:
                  storageclass.kubernetes.io/is-default-class: "true"
              provisioner: example.com/nfs
              mountOptions:
                - vers=4.1

              ---
              apiVersion: v1
              kind: ServiceAccount
              metadata:
                name: nfs-provisioner
                namespace: kube-system

              ---
              kind: ClusterRole
              apiVersion: rbac.authorization.k8s.io/v1
              metadata:
                name: nfs-provisioner-runner
              rules:
                - apiGroups: 
                    - ""
                  resources:
                    - persistentvolumes
                  verbs: 
                    - get
                    - list
                    - watch
                    - create
                    - delete
                - apiGroups:
                    - ""
                  resources:
                    - persistentvolumeclaims
                  verbs:
                    - get
                    - list
                    - watch
                    - update
                - apiGroups:
                    - storage.k8s.io
                  resources:
                    - storageclasses
                  verbs: 
                    - get
                    - list
                    - watch
                - apiGroups:
                    - ""
                  resources:
                    - events
                  verbs:
                    - create
                    - list
                    - watch
                    - update
                    - patch
                - apiGroups:
                    - ""
                  resources:
                    - services
                    - endpoints
                  verbs: 
                    - get
                - apiGroups:
                    - extensions
                  resources:
                    - podsecuritypolicies
                  resourceNames:
                    - nfs-provisioner
                  verbs:
                    - use

              ---
              kind: ClusterRoleBinding
              apiVersion: rbac.authorization.k8s.io/v1
              metadata:
                name: run-nfs-provisioner
              subjects:
                - kind: ServiceAccount
                  name: nfs-provisioner
                  namespace: kube-system
              roleRef:
                kind: ClusterRole
                name: nfs-provisioner-runner
                apiGroup: rbac.authorization.k8s.io

              ---
              kind: Role
              apiVersion: rbac.authorization.k8s.io/v1
              metadata:
                name: leader-locking-nfs-provisioner
              rules:
                - apiGroups: 
                    - ""
                  resources: 
                    - endpoints
                  verbs: 
                    - get
                    - list
                    - watch
                    - create
                    - update
                    - patch

              ---
              kind: RoleBinding
              apiVersion: rbac.authorization.k8s.io/v1
              metadata:
                name: leader-locking-nfs-provisioner
              subjects:
                - kind: ServiceAccount
                  name: nfs-provisioner
                  namespace: kube-system
              roleRef:
                kind: Role
                name: leader-locking-nfs-provisioner
                apiGroup: rbac.authorization.k8s.io

              ---
              kind: Service
              apiVersion: v1
              metadata:
                name: nfs-provisioner
                namespace: kube-system
                labels:
                  app: nfs-provisioner
              spec:
                ports:
                  - name: nfs
                    port: 2049
                  - name: mountd
                    port: 20048
                  - name: rpcbind
                    port: 111
                  - name: rpcbind-udp
                    port: 111
                    protocol: UDP
                selector:
                  app: nfs-provisioner

              ---
              kind: Deployment
              apiVersion: apps/v1beta1
              metadata:
                name: nfs-provisioner
                namespace: kube-system
              spec:
                replicas: 1
                strategy:
                  type: Recreate
                template:
                  metadata:
                    labels:
                      app: nfs-provisioner
                  spec:
                    nodeSelector:
                      kubernetes.io/hostname: {{ ansible_hostname }}
                    serviceAccountName: nfs-provisioner
                    containers:
                      - name: nfs-provisioner
                        image: quay.io/kubernetes_incubator/nfs-provisioner:v{{ config.k8s.services.nfs.version }}
                        ports:
                          - name: nfs
                            containerPort: 2049
                          - name: mountd
                            containerPort: 20048
                          - name: rpcbind
                            containerPort: 111
                          - name: rpcbind-udp
                            containerPort: 111
                            protocol: UDP
                        securityContext:
                          capabilities:
                            add:
                              - DAC_READ_SEARCH
                              - SYS_RESOURCE
                        args:
                          - "-provisioner=example.com/nfs"
                        env:
                          - name: POD_IP
                            valueFrom:
                              fieldRef:
                                fieldPath: status.podIP
                          - name: SERVICE_NAME
                            value: nfs-provisioner
                          - name: POD_NAMESPACE
                            valueFrom:
                              fieldRef:
                                fieldPath: metadata.namespace
                        volumeMounts:
                          - name: export-volume
                            mountPath: /export
                    volumes:
                      - name: export-volume
                        hostPath:
                          path: {{ config.k8s.services.nfs.hostPath }}
        - command: kubectl apply -f {{ tempfile.path }}
          changed_when: false
      always:
        - file:
            path: "{{ tempfile.path }}"
            state: absent
          changed_when: false
      when: config.k8s.services.nfs.storageNode == ansible_hostname
