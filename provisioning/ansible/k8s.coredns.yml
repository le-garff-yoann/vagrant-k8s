---

- hosts: all

  tasks:
    - name: Generate and apply CoreDNS k8s manifest
      block:
        - tempfile:
            state: file
          register: tempfile
          changed_when: False
        - copy:
            dest: "{{ tempfile.path }}"
            content: |
              ---
              apiVersion: v1
              kind: ServiceAccount
              metadata:
                name: coredns
                namespace: kube-system

              ---
              apiVersion: rbac.authorization.k8s.io/v1
              kind: ClusterRole
              metadata:
                name: system:coredns
                labels:
                  kubernetes.io/bootstrapping: rbac-defaults
              rules:
                - apiGroups:
                    - ""
                  resources:
                    - endpoints
                    - services
                    - pods
                    - namespaces
                  verbs:
                    - list
                    - watch

              ---
              apiVersion: rbac.authorization.k8s.io/v1
              kind: ClusterRoleBinding
              metadata:
                name: system:coredns
                annotations:
                  rbac.authorization.kubernetes.io/autoupdate: "true"
                labels:
                  kubernetes.io/bootstrapping: rbac-defaults
              roleRef:
                apiGroup: rbac.authorization.k8s.io
                kind: ClusterRole
                name: system:coredns
              subjects:
                - kind: ServiceAccount
                  name: coredns
                  namespace: kube-system

              ---
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: coredns
                namespace: kube-system
              data:
                Corefile: |
                  .:53 {
                      errors
                      log
                      health
                      kubernetes {{ config.k8s.domain }} {{ config.k8s.service.range }} {{ config.k8s.pod.network }} {
                        pods insecure
                        upstream /etc/resolv.conf
                      }
                      prometheus :9153
                      forward . /etc/resolv.conf
                      cache 30
                  }

              ---
              apiVersion: v1
              kind: Service
              metadata:
                name: coredns
                namespace: kube-system
                labels:
                  app: coredns
                  kubernetes.io/cluster-service: "true"
                  kubernetes.io/name: CoreDNS
                  prometheus.io/port: "9153"
                  prometheus.io/scrape: "true"
              spec:
                selector:
                  app: coredns
                clusterIP: {{ config.k8s.services.coredns.ip }}
                ports:
                  - name: dns
                    port: 53
                    protocol: UDP
                  - name: dns-tcp
                    port: 53
                    protocol: TCP
                  - name: metrics
                    port: 9153
                    protocol: TCP

              ---
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: coredns
                namespace: kube-system
                labels:
                  app: coredns
                  kubernetes.io/cluster-service: "true"
                  kubernetes.io/name: CoreDNS
              spec:
                replicas: 2
                selector:
                  matchLabels:
                    app: coredns
                template:
                  metadata:
                    labels:
                      app: coredns
                  spec:
                    serviceAccountName: coredns
                    tolerations:
                      - key: CriticalAddonsOnly
                        operator: Exists
                    affinity:
                      podAntiAffinity:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          - weight: 100
                            podAffinityTerm:
                              labelSelector:
                                matchExpressions:
                                  - key: app
                                    operator: In
                                    values:
                                      - coredns
                              topologyKey: kubernetes.io/hostname
                    containers:
                      - name: coredns
                        image: coredns/coredns:{{ config.k8s.services.coredns.version }}
                        args:
                          - -conf
                          - /etc/coredns/Corefile
                        volumeMounts:
                          - name: config-volume
                            mountPath: /etc/coredns
                        ports:
                          - containerPort: 53
                            protocol: UDP
                          - containerPort: 53
                            protocol: TCP
                          - containerPort: 9153
                            protocol: TCP
                        livenessProbe:
                          httpGet:
                            path: /health
                            port: 8080
                            scheme: HTTP
                          initialDelaySeconds: 60
                          timeoutSeconds: 5
                          successThreshold: 1
                          failureThreshold: 5
                    dnsPolicy: Default
                    volumes:
                      - name: config-volume
                        configMap:
                          name: coredns
                          items:
                            - key: Corefile
                              path: Corefile
        - command: kubectl apply -f {{ tempfile.path }}
          changed_when: False
      always:
        - file:
            path: "{{ tempfile.path }}"
            state: absent
          changed_when: False
